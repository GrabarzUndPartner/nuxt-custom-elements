name: Main
on:
  push:
    branches:
      - main

jobs:
  install:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Install
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [19]

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: cache node_modules (Example)
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright/
            ~\AppData\Local\ms-playwright\
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: Install Dependencies (Example)
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: Prepack
        run: npm run prepack

      - name: cache node_modules (Docs)
        uses: actions/cache@v3
        id: cacheDocs
        with:
          path: docs/node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/docs/package-lock.json')) }}-docs
      - name: Install Dependencies (Docs)
        if: steps.cacheDocs.outputs.cache-hit != 'true'
        run: cd docs && npm ci

  semantic-version:
    name: Semantic Release
    needs: install
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [19]

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Versioning
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          rsync -r --exclude ./lib ./lib/* .
          npx -p pinst -p semantic-release -p @semantic-release/git -p @semantic-release/changelog -p @semantic-release/exec -p @semantic-release/github semantic-release --provider=github

  build-example:
    name: Build (Example)
    needs: semantic-version
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [19]

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: cache node_modules
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright/
            ~\AppData\Local\ms-playwright\
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}
      - name: Build
        run: |
          npm run generate --base-url=/example/ --website-host=https://nuxt-custom-elements.grabarzundpartner.dev
          touch playground/.output/public/nuxt-custom-elements
        env:
          DIST_PATH: dist
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: exampleArtifact
          path: playground/.output/public/nuxt-custom-elements

  build-docs:
    name: Build (Docs)
    needs: semantic-version
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [19]

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: cache docs/node_modules
        uses: actions/cache@v3
        id: cacheDocs
        with:
          path: docs/node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/docs/package-lock.json')) }}-docs
      - name: Build
        run: |
          cd ./docs
          npm run generate --website-host=https://nuxt-custom-elements.grabarzundpartner.dev
          touch dist/.nojekyll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DIST_PATH: dist
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: docsArtifact
          path: docs/dist

  deploy-ghpages:
    name: Deploy (GH-Pages)
    needs: [build-example, build-docs]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [19]
    steps:
      - name: Download Artifact (Docs)
        uses: actions/download-artifact@master
        with:
          name: docsArtifact
          path: public/docs
      - name: Download Artifact (Example)
        uses: actions/download-artifact@master
        with:
          name: exampleArtifact
          path: public/docs/example
      - name: Deploy to GH-Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public
